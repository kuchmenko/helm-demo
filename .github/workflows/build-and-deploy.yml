name: Build & Deploy

on:
  push:
    branches: [develop, main]
    paths: ["apps/**", "infra/**"]

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  CLUSTER_NAME: helm-demo
  REGISTRY: us-central1-docker.pkg.dev

jobs:
  get-affected-apps:
    uses: ./.github/workflows/get-affected-apps.yaml

  build-deploy:
    needs: get-affected-apps
    if: ${{ needs.get-affected-apps.outputs.has_affected_apps == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.get-affected-apps.outputs.affected_apps) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - run: gcloud auth configure-docker $REGISTRY --quiet

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ matrix.app }}/${{ matrix.app }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{ is_default_branch }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - id: gsm
        uses: google-github-actions/get-secretmanager-secrets@v2
        with:
          secrets: |
            COMMON_ENV:projects/${{ env.PROJECT_ID }}/secrets/COMMON_ENV/versions/latest

      - run: |
          echo "global:"           >  /tmp/secret-values.yaml
          echo "  backingStores:"  >> /tmp/secret-values.yaml
          printf '%b' "$RAW_COMMON" | sed '1s/^\xEF\xBB\xBF//' | \
          jq -r 'to_entries[] | "    \(.key): \"\(.value)\""' >> /tmp/secret-values.yaml

      - uses: azure/setup-helm@v4

      - name: Get GKE credentials
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet
          gcloud container clusters get-credentials "$CLUSTER_NAME" \
            --region "$REGION" --project "$PROJECT_ID"

      - name: Deploy
        env:
          IMAGE_TAG: ${{ steps.meta.outputs.version }}
        run: |
          APP="${{ matrix.app }}"
          CHART_DIR="infrastructure/services/${APP}"

          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            NAMESPACE=prd
            VALUES_FILE=prd.yaml
          else
            NAMESPACE=default
            VALUES_FILE=dev.yaml
          fi

          # Clean up any stuck releases
          if helm status "$APP" -n "$NAMESPACE" 2>/dev/null | grep -q pending; then
            helm uninstall "$APP" -n "$NAMESPACE" || true
            sleep 5
          fi

          # Deploy
          helm upgrade "$APP" "$CHART_DIR" \
            -n "$NAMESPACE" --create-namespace \
            -f infrastructure/globals/values-common.yaml \
            -f /tmp/secret-values.yaml \
            -f "$CHART_DIR/values/$VALUES_FILE" \
            --set image.repository=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${APP}/${APP} \
            --set image.tag="$IMAGE_TAG" \
            --set global.gitSha="${{ github.sha }}" \
            --install --wait --timeout 10m

          # Verify deployment
          kubectl get pods -n "$NAMESPACE" -l "app.kubernetes.io/instance=${APP}"
